{"remainingRequest":"/Users/perry/Hall-Thruster-Database/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/perry/Hall-Thruster-Database/src/views/Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/perry/Hall-Thruster-Database/src/views/Edit.vue","mtime":1588314240569},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgppbXBvcnQgVnVlIGZyb20gJ3Z1ZScKaW1wb3J0IEF4aW9zIGZyb20gJ2F4aW9zJwppbXBvcnQgVG9vbGJhckd1ZXN0IGZyb20gJy4uL2NvbXBvbmVudHMvVG9vbGJhci52dWUnOwp2YXIgeDsKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCh7CiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgVG9vbGJhckd1ZXN0CiAgICB9LAoKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgcmVuZGVyRm9ybTogJ2ZhbHNlJywKICAgICAgICAgICAgdGhydXN0ZXJOYW1lczpbXSwKICAgICAgICAgICAgc2VsZWN0ZWRJdGVtOiAwLAogICAgICAgICAgICBkaWFsb2c6IGZhbHNlLAogICAgICAgICAgICAvLyBuYW1lSW5wdXRSdWxlczogWwogICAgICAgICAgICAvLyAgICAgdiA9PiB2ICYmICEhdiB8fCAnUmVxdWlyZWQnLAogICAgICAgICAgICAvLyAgICAgLy8gRG9lcyBub3Qgd29yayBvbiBjaGFyYWN0ZXJzIHBhc3QgZmlyc3QgbmVlZCB0byBmaXgKICAgICAgICAgICAgLy8gICAgIHYgPT4gdiAmJiAvW2EtekEtWjAtOV0vLnRlc3QodikgfHwgJ05vIHNwZWNpYWwgY2hhcmFjdGVycyBhbGxvd2VkLicsCiAgICAgICAgICAgIC8vICAgICB2ID0+IHYgJiYgdi5sZW5ndGggPCAyMCB8fCAnTWF4aW11bSBsZW5ndGggaXMgMjAgY2hhcmFjdGVycy4nCiAgICAgICAgICAgIC8vIF0sCiAgICAgICAgICAgIC8vIHRleHRJbnB1dFJ1bGVzOiBbCiAgICAgICAgICAgIC8vICAgICAvLyBubyBzcGVjaWFsIGNoYXJhY3RlcnMKICAgICAgICAgICAgLy8gICAgIHYgPT4gL1stX2EtekEtWl0vLnRlc3QodikgfHwgJ05vIHNwZWNpYWwgY2hhcmFjdGVycyBhbGxvd2VkLicsCiAgICAgICAgICAgIC8vICAgICB2ID0+IHYubGVuZ3RoIDwgMjAgfHwgJ01heGltdW0gbGVuZ3RoIGlzIDIwIGNoYXJhY3RlcnMuJwogICAgICAgICAgICAvLyBdLAogICAgICAgICAgICAvLyBudW1iZXJJbnB1dFJ1bGVzOiBbCiAgICAgICAgICAgIC8vICAgICB2ID0+IC9eWzEtOV1cZCooXC5cZCspPyQvLnRlc3QodikgfHwgJ1ZhbHVlIG11c3QgYmUgYSBudW1iZXIuJywKICAgICAgICAgICAgLy8gXSwKICAgICAgICAgICAgLy8gdHJsSW5wdXRSdWxlczogWwogICAgICAgICAgICAvLyAgICAgdiA9PiB2IDw9IDkgfHwgJ1ZhbHVlIG11c3QgYmUgYmV0d2VlbiAxIGFuZCA5LicsCiAgICAgICAgICAgIC8vICAgICB2ID0+IHYgJiYgdiAhPSAwIHx8ICdWYWx1ZSBtdXN0IGJlIG5vbi16ZXJvLicKICAgICAgICAgICAgLy8gXSwKICAgICAgICAgICAgc3lzdGVtOiBbXSwKCiAgICAgICAgfTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgdXBkYXRlUmVjb3JkKCkgewogICAgICAgICAgICAgdGhpcy5zeXN0ZW0gPSB7CiAgICAgICAgICAgICAgICBib2R5OiB7CiAgICAgICAgICAgICAgICAgICAgVGhydXN0OiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiB0aGlzLnN5c3RlbS5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogdGhpcy5zeXN0ZW0ubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgdGhydXN0OiB0aGlzLnN5c3RlbS50aHJ1c3QsCiAgICAgICAgICAgICAgICAgICAgICAgIHNwZWNpZmljX2ltcHVsc2U6IHRoaXMuc3lzdGVtLnNwZWNpZmljX2ltcHVsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgIG1hbnVmYWN0dXJlcjogdGhpcy5zeXN0ZW0ubWFudWZhY3R1cmVyLAogICAgICAgICAgICAgICAgICAgICAgICBwcm9wZWxsYW50OiB0aGlzLnN5c3RlbS5wcm9wZWxsYW50LAogICAgICAgICAgICAgICAgICAgICAgICB3ZWlnaHQ6IHRoaXMuc3lzdGVtLndlaWdodCwKICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXRfcG93ZXI6IHRoaXMuc3lzdGVtLmlucHV0X3Bvd2VyCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBEaW1lbnNpb25zOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLnN5c3RlbS5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgICAgICAgICAgICAgZGltZW5zaW9uX3ZhbHVlOiB0aGlzLnN5c3RlbS5kaW1lbnNpb25fdmFsdWUKCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAvLyBBdmFpbGFiaWxpdHk6IHsKICAgICAgICAgICAgICAgICAgICAvLyAgICAgUmVhZHlEYXRlOiB0aGlzLnN5c3RlbS5SZWFkeURhdGUsCiAgICAgICAgICAgICAgICAgICAgLy8gICAgIFRSTDogdGhpcy5zeXN0ZW0uVFJMCiAgICAgICAgICAgICAgICAgICAgLy8gfSwKICAgICAgICAgICAgICAgICAgICBNaXNzaW9uczogewogICAgICAgICAgICAgICAgICAgICAgICBtaXNzaW9uX25hbWU6IHRoaXMuc3lzdGVtLm1pc3Npb25fbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgbWlzc2lvbl9kYXRlOiB0aGlzLnN5c3RlbS5taXNzaW9uX2RhdGUsCiAgICAgICAgICAgICAgICAgICAgICAgIGRlbHRhX3Y6IHRoaXMuc3lzdGVtLkRlbHRhVgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgSW50ZXJmYWNlczogewogICAgICAgICAgICAgICAgICAgICAgICBpbnRlcmZhY2VfbmFtZTogdGhpcy5zeXN0ZW0uaW50ZXJmYWNlX25hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIGludGVyZmFjZV9kZXNjcmlwdGlvbjogdGhpcy5zeXN0ZW0uaW50ZXJmYWNlX2Rlc2NyaXB0aW9uCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgfQogICAgICAgICAgICBKU09OLnN0cmluZ2lmeSh0aGlzLnN5c3RlbSkKCiAgICAgICAgICAgIGFsZXJ0KCJUaHJ1c3RlcjogIiArIHRoaXMuc3lzdGVtLmJvZHkuVGhydXN0Lm5hbWUgKyAiIGhhcyBiZWVuIHVwZGF0ZWQuIikKICAgICAgICAgICAgY29uc29sZS5sb2coIlVwZGF0ZWQgc3lzdGVtOiAiKQogICAgICAgICAgICBjb25zb2xlLmxvZyggdGhpcy5zeXN0ZW0pCiAgICAgICAgICAgIEF4aW9zCiAgICAgICAgICAgICAgICAvLyAucHV0KCdodHRwczovL29pOXIxcjA5azYuZXhlY3V0ZS1hcGkudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vZGVwbG95LXN0YWdlL2VkaXQnLCBzeXN0ZW0pCiAgICAgICAgICAgICAgICAucG9zdCgnaHR0cHM6Ly9vaTlyMXIwOWs2LmV4ZWN1dGUtYXBpLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tL2RlcGxveS1zdGFnZS9tb2RpZnknLCB0aGlzLnN5c3RlbSkKICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIlRISVMgT05FIik7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgLy8gdGhpcy4kcm91dGVyLnB1c2goe25hbWU6ICdyZXRyaWV2ZSBzeXN0ZW0nfSkKICAgICAgICB9LAoKICAgICAgICBkZWxldGUoKSB7CiAgICAgICAgICAgIC8vZG8gc3R1ZmYKICAgICAgICB9LAogICAgICAgIGxvYWREYXRhKGV2ZW50KXsKICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQpOwogICAgICAgICAgICB4ID0gZXZlbnQ7CiAgICAgICAgICAgIEF4aW9zLmdldChgaHR0cHM6Ly9vaTlyMXIwOWs2LmV4ZWN1dGUtYXBpLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tL2RlcGxveS1zdGFnZS9nZXRCeUlkP2lkPSR7eH1gKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMuc3lzdGVtID0gcmVzcG9uc2UuZGF0YS5ib2R5WzBdLAogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiR2V0dGluZyBEYXRhIik7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuc3lzdGVtKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY2F0Y2goZXJyb3JzID0+IGNvbnNvbGUubG9nKGVycm9ycykpOwogICAgICAgICAgICB0aGlzLnJlbmRlckZvcm0gPSAndHJ1ZSc7CgogICAgICAgIH0sCgoKICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIEF4aW9zCiAgICAgICAgICAgIC5nZXQoJ2h0dHBzOi8vb2k5cjFyMDlrNi5leGVjdXRlLWFwaS51cy1lYXN0LTEuYW1hem9uYXdzLmNvbS9kZXBsb3ktc3RhZ2UvcmV0cmlldmUnKQogICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7dGhpcy50aHJ1c3Rlck5hbWVzID0gcmVzcG9uc2UuZGF0YS5ib2R5fSkKICAgICAgICAgICAgLmNhdGNoKGVycm9ycyA9PiBjb25zb2xlLmxvZyhlcnJvcnMpKTsKICAgIH0KfSkK"},{"version":3,"sources":["Edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Edit.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"edit\">\n        <v-content>\n            <div>\n                <ToolbarGuest />\n            </div>\n        </v-content>\n\n<!--        Selecting thruster to edit and loading its data-->\n<v-spacer>.</v-spacer>\n        <h1 class=\"text-center\">\n            Edit a System\n        </h1>\n\n        <p class=\"text-center\">\n            Select a thruster from the database to edit.\n        </p>\n        <v-divider></v-divider>\n        <v-container grid-list-sm >\n            <v-col lg=\"6\" >\n                <v-flex>\n                    <v-select\n                            :items = \"thrusterNames\"\n                            item-text = \"name\"\n                            item-value = \"id\"\n                            v-model = \"selectedItem\"\n                            @change = \"loadData($event)\"\n                            label=\"Select a thruster to modify\"\n                            segmented overflow editable\n                            target=\"#target\"\n\n                    ></v-select>\n                </v-flex>\n            </v-col>\n        </v-container>\n\n        <v-dialog\n                v-model=\"dialog\"\n                max-width=\"600\"\n        >\n            <v-card>\n                <v-card-title class=\"text-center\"> Edit Thruster </v-card-title>\n\n                <v-form ref=\"form\" >\n                    <v-text-field\n                            v-model=\"name\"\n                            label=\"Name\"\n                            required\n                    >\n                    </v-text-field>\n\n                </v-form>\n\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n\n                    <v-btn\n                            color=\"error\"\n                            text\n                            @click=\"dialog = false\"\n                    >\n                        Cancel\n                    </v-btn>\n\n                    <v-btn\n                            color=\"success\"\n                            text\n                            @click=\"editRecord(name)\"\n                    >\n                        Save\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n\n\n        <v-card\n                class=\"mx-auto\"\n                max-width=\"50%\"\n                outlined\n                raised\n                v-if=\"renderForm === 'true'\"\n        >\n\n            <v-container>\n                <form >\n                    <v-text-field\n                            v-model=\"system.name\"\n                            label=\"Name\"\n                            required\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system.thrust\"\n                            label=\"Thrust (mN)\"\n                            required\n                    > </v-text-field>\n                    <v-text-field\n                            v-model=\"system['specific_impulse']\"\n                            label=\"Specific Impulse (s)\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['manufacturer']\"\n                            label=\"Manufacturer\"\n                            required\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['propellant']\"\n                            label=\"Propellant\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system.weight\"\n                            label=\"Mass (kg)\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['input_power']\"\n                            label=\"Input Power (W)\"\n                    ></v-text-field>\n\n                    <!--                    Add other tables w/ multiple query                     -->\n\n<!--                    <v-text-field-->\n<!--                            v-model=\"system['ready_date']\"-->\n<!--                            label=\"Ready Date\"-->\n<!--                    ></v-text-field>-->\n<!--                    <v-text-field-->\n<!--                            v-model=\"system.TRL\"-->\n<!--                            label=\"TRL\"-->\n<!--                    ></v-text-field>-->\n                    <v-text-field\n                            v-model=\"system['mission_name']\"\n                            label=\"Mission Name\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['mission_date']\"\n                            label=\"Mission Date\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['delta_v']\"\n                            label=\"Delta V\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['dimension_description']\"\n                            label=\"Dimention Description\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['dimension_value']\"\n                            label=\"Dimention Value\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['interface_name']\"\n                            label=\"Interface Name\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['interface_description']\"\n                            label=\"Interface Description\"\n                    ></v-text-field>\n\n                    <v-btn class=\"mr-4\" @click=\"updateRecord\">Update</v-btn>\n                </form>\n\n            </v-container>\n\n\n        </v-card>\n        <v-spacer>.</v-spacer>\n        <v-divider></v-divider>\n    </div>\n</template>\n\n<script lang=\"js\">\n    import Vue from 'vue'\n    import Axios from 'axios'\n    import ToolbarGuest from '../components/Toolbar.vue';\n    var x;\n    export default Vue.extend({\n        components: {\n            ToolbarGuest\n        },\n\n        data() {\n            return {\n                renderForm: 'false',\n                thrusterNames:[],\n                selectedItem: 0,\n                dialog: false,\n                // nameInputRules: [\n                //     v => v && !!v || 'Required',\n                //     // Does not work on characters past first need to fix\n                //     v => v && /[a-zA-Z0-9]/.test(v) || 'No special characters allowed.',\n                //     v => v && v.length < 20 || 'Maximum length is 20 characters.'\n                // ],\n                // textInputRules: [\n                //     // no special characters\n                //     v => /[-_a-zA-Z]/.test(v) || 'No special characters allowed.',\n                //     v => v.length < 20 || 'Maximum length is 20 characters.'\n                // ],\n                // numberInputRules: [\n                //     v => /^[1-9]\\d*(\\.\\d+)?$/.test(v) || 'Value must be a number.',\n                // ],\n                // trlInputRules: [\n                //     v => v <= 9 || 'Value must be between 1 and 9.',\n                //     v => v && v != 0 || 'Value must be non-zero.'\n                // ],\n                system: [],\n\n            };\n        },\n        methods: {\n            updateRecord() {\n                 this.system = {\n                    body: {\n                        Thrust: {\n                            id: this.system.id,\n                            name: this.system.name,\n                            thrust: this.system.thrust,\n                            specific_impulse: this.system.specific_impulse,\n                            manufacturer: this.system.manufacturer,\n                            propellant: this.system.propellant,\n                            weight: this.system.weight,\n                            input_power: this.system.input_power\n                        },\n                        Dimensions: {\n                            description: this.system.description,\n                            dimension_value: this.system.dimension_value\n\n                        },\n                        // Availability: {\n                        //     ReadyDate: this.system.ReadyDate,\n                        //     TRL: this.system.TRL\n                        // },\n                        Missions: {\n                            mission_name: this.system.mission_name,\n                            mission_date: this.system.mission_date,\n                            delta_v: this.system.DeltaV\n                        },\n                        Interfaces: {\n                            interface_name: this.system.interface_name,\n                            interface_description: this.system.interface_description\n                        }\n                    }\n\n                }\n                JSON.stringify(this.system)\n\n                alert(\"Thruster: \" + this.system.body.Thrust.name + \" has been updated.\")\n                console.log(\"Updated system: \")\n                console.log( this.system)\n                Axios\n                    // .put('https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/edit', system)\n                    .post('https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/modify', this.system)\n                    .catch(function(error) {\n                        console.log(error);\n                    })\n                    .then(response => {\n                        console.log(\"THIS ONE\");\n                        console.log(response);\n                    })\n                // this.$router.push({name: 'retrieve system'})\n            },\n\n            delete() {\n                //do stuff\n            },\n            loadData(event){\n                console.log(event);\n                x = event;\n                Axios.get(`https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/getById?id=${x}`)\n                    .then(response => {\n                        this.system = response.data.body[0],\n                            console.log(\"Getting Data\");\n                            console.log(this.system);\n                    })\n                    .catch(errors => console.log(errors));\n                this.renderForm = 'true';\n\n            },\n\n\n        },\n        mounted() {\n            Axios\n                .get('https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/retrieve')\n                .then(response => {this.thrusterNames = response.data.body})\n                .catch(errors => console.log(errors));\n        }\n    })\n</script>"]}]}