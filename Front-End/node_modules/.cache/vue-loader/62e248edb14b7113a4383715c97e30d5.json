{"remainingRequest":"/Users/perry/Hall-Thruster-Database/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/perry/Hall-Thruster-Database/src/views/CreateAdmin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/perry/Hall-Thruster-Database/src/views/CreateAdmin.vue","mtime":1587598760561},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUb29sYmFyQWRtaW4gZnJvbSAnLi4vY29tcG9uZW50cy9Ub29sYmFyLnZ1ZSc7CmltcG9ydCBDcmVhdGVBbGVydCBmcm9tICcuLi9jb21wb25lbnRzL0NyZWF0ZUFsZXJ0LnZ1ZScKaW1wb3J0IHsgcmVxdWlyZWQsIG1pbkxlbmd0aCwgYmV0d2VlbiB9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycycKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFRvb2xiYXJBZG1pbiwKICAgIENyZWF0ZUFsZXJ0CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vIHZhcmlhYmxlcyBmb3Igc2xpZGVyIHN0YXRlCiAgICAgIGRpbWVuc2lvbnNTbGlkZXI6IGZhbHNlLAogICAgICBhdmFpbGFiaWxpdHlTbGlkZXI6IGZhbHNlLAogICAgICBtaXNzaW9uc1NsaWRlcjogZmFsc2UsCiAgICAgIGludGVyZmFjZXNTbGlkZXI6IGZhbHNlLAogICAgICBwaWNrZXI6IG5ldyBEYXRlKCksCiAgICAgIG5ld1N5c3RlbTogewogICAgICB9LAogICAgICBBUElSZXN1bHQ6IDEzMCwKICAgICAgdGhydXN0ZXJJZDogbnVsbCwKICAgICAgbmFtZUlucHV0UnVsZXM6IFsKICAgICAgICB2ID0+IHYgJiYgISF2IHx8ICdSZXF1aXJlZCcsCiAgICAgICAgLy8gRG9lcyBub3Qgd29yayBvbiBjaGFyYWN0ZXJzIHBhc3QgZmlyc3QgbmVlZCB0byBmaXgKICAgICAgICB2ID0+IHYgJiYgL1thLXpBLVowLTldLy50ZXN0KHYpIHx8ICdObyBzcGVjaWFsIGNoYXJhY3RlcnMgYWxsb3dlZC4nLAogICAgICAgIHYgPT4gdiAmJiB2Lmxlbmd0aCA8IDIwIHx8ICdNYXhpbXVtIGxlbmd0aCBpcyAyMCBjaGFyYWN0ZXJzLicKICAgICAgXSwKICAgICAgdGV4dElucHV0UnVsZXM6IFsKICAgICAgICAvLyBubyBzcGVjaWFsIGNoYXJhY3RlcnMKICAgICAgICB2ID0+IC9bLV9hLXpBLVpdLy50ZXN0KHYpIHx8ICdObyBzcGVjaWFsIGNoYXJhY3RlcnMgYWxsb3dlZC4nLAogICAgICAgIHYgPT4gdi5sZW5ndGggPCA0NSB8fCAnTWF4aW11bSBsZW5ndGggaXMgNDUgY2hhcmFjdGVycy4nCiAgICAgIF0sCiAgICAgIG51bWJlcklucHV0UnVsZXM6IFsKICAgICAgICB2ID0+IC9eWzEtOV1cZCooXC5cZCspPyQvLnRlc3QodikgfHwgJ1ZhbHVlIG11c3QgYmUgYSBudW1iZXIuJywKICAgICAgXSwKICAgICAgdHJsSW5wdXRSdWxlczogWwogICAgICAgIHYgPT4gdiA8PSA5IHx8ICdWYWx1ZSBtdXN0IGJlIGJldHdlZW4gMSBhbmQgOS4nLAogICAgICAgIHYgPT4gdiAmJiB2ICE9IDAgfHwgJ1ZhbHVlIG11c3QgYmUgbm9uLXplcm8uJwogICAgICBdCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBtZXRob2QgdG8gY3JlYXRlIGEgc3lzdGVtCiAgICBjcmVhdGUoKSB7CiAgICAgIC8vIFBhcnNlIGRhdGEgZnJvbSB0ZXh0IGZpZWxkcyBpbnRvIG5ld1N5c3RlbSBvYmplY3QKICAgICAgbGV0IG5ld1N5c3RlbSA9IHsKICAgICAgICBUaHJ1c3Q6IHsKICAgICAgICAgIG5hbWU6IHRoaXMubmV3U3lzdGVtLm5hbWUsCiAgICAgICAgICB0aHJ1c3Q6IHRoaXMubmV3U3lzdGVtLnRocnVzdCwKICAgICAgICAgIHNwZWNpZmljX2ltcHVsc2U6IHRoaXMubmV3U3lzdGVtLnNwZWNpZmljX2ltcHVsc2UsCiAgICAgICAgICBtYW51ZmFjdHVyZXI6IHRoaXMubmV3U3lzdGVtLm1hbnVmYWN0dXJlciwKICAgICAgICAgIHByb3BlbGxhbnQ6IHRoaXMubmV3U3lzdGVtLnByb3BlbGxhbnQsCiAgICAgICAgICBzeXN0ZW1fZWZmaWNpZW5jeTogdGhpcy5uZXdTeXN0ZW0uc3lzdGVtX2VmZmljaWVuY3ksCiAgICAgICAgICB3ZWlnaHQ6IHRoaXMubmV3U3lzdGVtLndlaWdodCwKICAgICAgICAgIGlucHV0X3Bvd2VyOiB0aGlzLm5ld1N5c3RlbS5pbnB1dF9wb3dlciwKICAgICAgICAgIHJlZmVyZW5jZTogdGhpcy5uZXdTeXN0ZW0ucmVmZXJlbmNlCiAgICAgICAgfSAgICAgICAgCiAgICAgIH0KCiAgICAgIGxldCBuZXdTeXN0ZW1BZGRpdGlvbmFsID0gewogICAgICAgIHRocnVzdGVySWQ6IHRoaXMuQVBJUmVzdWx0LAogICAgICAgIE1pc3Npb25zOiB7CiAgICAgICAgICBtaXNzaW9uX25hbWU6IHRoaXMubmV3U3lzdGVtLk1pc3Npb25OYW1lLAogICAgICAgICAgbWlzc2lvbl9kYXRlOiB0aGlzLm5ld1N5c3RlbS5NaXNzaW9uRGF0ZSwKICAgICAgICAgIGRlbHRhX3Y6IHRoaXMubmV3U3lzdGVtLkRlbHRhVgogICAgICAgIH0sCiAgICAgICAgRGltZW5zaW9uczogewogICAgICAgICAgZGVzY3JpcHRpb246IHRoaXMubmV3U3lzdGVtLkRlc2NyaXB0aW9uLAogICAgICAgICAgZGltZW5zaW9uX3ZhbHVlOiB0aGlzLm5ld1N5c3RlbS5EaW1lbnNpb25WYWx1ZQogICAgICAgIH0sIAogICAgICAgIEludGVyZmFjZXM6IHsKICAgICAgICAgIGludGVyZmFjZV9uYW1lOiB0aGlzLm5ld1N5c3RlbS5JbnRlcmZhY2VOYW1lLAogICAgICAgICAgaW50ZXJmYWNlX2Rlc2NyaXB0aW9uOiB0aGlzLm5ld1N5c3RlbS5JbnRlcmZhY2VEZXNjcmlwdGlvbgogICAgICAgIH0sCiAgICAgIH0KICAgICAKICAgICAgLy8gRW5jb2RlIHN5c3RlbSBvYmplY3QgdG8gYmUgc2VudCB0byBiYWNrZW5kCiAgICAgIEpTT04uc3RyaW5naWZ5KG5ld1N5c3RlbSk7CgogICAgICAvLyBJbnNlcnQgaW50byB0aGUgdGhydXN0ZXIgdGFibGUgdG8gcmVjZWl2ZSB0aGUgSUQKICAgICAgLyoKICAgICAgYXhpb3MKICAgICAgICAucG9zdCgnaHR0cHM6Ly9vaTlyMXIwOWs2LmV4ZWN1dGUtYXBpLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tL2RlcGxveS1zdGFnZS9jcmVhdGUnLCBuZXdTeXN0ZW0pCiAgICAgICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgfSkKICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIHRoaXMuQVBJUmVzdWx0ID0gcmVzcG9uc2UuZGF0YS5ib2R5Lmluc2VydElkOwogICAgICAgICAgY29uc29sZS5sb2codGhpcy5BUElSZXN1bHQpOwogICAgICAgICAgbmV3U3lzdGVtQWRkaXRpb25hbC50aHJ1c3RlcklkID0gdGhpcy5BUElSZXN1bHQ7CiAgICAgICAgfSk7CiAgICAgICovCgogICAgICAvL0pTT04uc3RyaW5naWZ5KG5ld1N5c3RlbUFkZGl0aW9uYWwpOwogICAgICBjb25zb2xlLmxvZyhuZXdTeXN0ZW1BZGRpdGlvbmFsKTsKICAgICAgCiAgICAgIGF4aW9zCiAgICAgICAgLnBvc3QoJ2h0dHBzOi8vb2k5cjFyMDlrNi5leGVjdXRlLWFwaS51cy1lYXN0LTEuYW1hem9uYXdzLmNvbS9kZXBsb3ktc3RhZ2UvY3JlYXRldHdvJywgbmV3U3lzdGVtQWRkaXRpb25hbCkKICAgICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICB9KQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgfSkgICAgICAKICAgICAgCgogICAgICBjb25zb2xlLmxvZyh0aGlzLkFQSVJlc3VsdCk7CiAgICB9LAogICAgY2xlYXIoKSB7CiAgICAgIHRoaXMuJHJlZnMuZm9ybS5yZXNldCgpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["CreateAdmin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"CreateAdmin.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"create\">\n    <v-content>\n        <ToolbarAdmin/>\n    </v-content>\n\n    <h1 class=\"text-center\">\n      System Creation\n    </h1>\n\n    <p class=\"text-center\">\n      Add any relevant information regarding the Thruster.\n    </p>\n    <p class=\"text-center\">\n      Use the Sliders to add more optional information.\n    </p>\n    <div id=\"Textboxes\">\n      <v-row align=\"center\">\n        <v-row justify=\"space-around\">\n          <v-switch  v-model=\"dimensionsSlider\" class=\"ma-4\" label=\"Dimensions\" value=\"true\" append-icon=\"mdi-rocket\"></v-switch>\n         <!-- <v-switch v-model=\"availabilitySlider\" class=\"ma-4\" label=\"Availability\" value=\"true\" append-icon=\"mdi-calendar\"></v-switch> -->\n          <v-switch v-model=\"missionsSlider\" class=\"ma-4\" label=\"Missions\" value=\"true\" append-icon=\"mdi-clipboard-list-outline\"></v-switch>\n          <v-switch v-model=\"interfacesSlider\" class=\"ma-4\" label=\"Interfaces\" value=\"true\" append-icon=\"mdi-console\"></v-switch>\n        </v-row>\n      </v-row>\n\n    <!-- Card for Thruster input fields -->\n      <v-card\n        class=\"mx-auto\"\n        max-width=\"400\"\n        outlined\n        raised\n      >\n        <v-form\n          ref=\"form\"\n        >\n        <v-container>\n          <p>Thruster</p>\n\n          <v-text-field\n            v-model=\"newSystem.name\"\n            :rules=\"nameInputRules\"\n            label=\"Name\"\n            required\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.thrust\"\n            :rules=\"numberInputRules\"\n            label=\"Thrust (mN)\"\n            required\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.specific_impulse\"\n            :rules=\"numberInputRules\"\n            label=\"Specific Impulse (s)\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.manufacturer\"\n            :rules=\"nameInputRules\"\n            label=\"Manufacturer\"\n            required\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.propellant\"\n            :rules=\"textInputRules\"\n            label=\"Propellant\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.system_efficiency\"\n            label=\"System Efficiency (%)\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.weight\"\n            :rules=\"numberInputRules\"\n            label=\"Weight (kg)\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.input_power\"\n            :rules=\"numberInputRules\"\n            label=\"Input Power (W)\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.reference\"\n            :rules=\"textInputRules\"\n            label=\"Reference\"\n          >\n          </v-text-field>\n\n          </v-container>\n        </v-form>\n      </v-card>\n\n      <!-- Card for dimensions -->\n\n      <v-card v-if=\"dimensionsSlider\"\n        class=\"mx-auto\"\n        max-width=\"400\"\n        outlined\n        raised\n      >\n        <p>Dimensions</p>\n\n          <v-text-field\n            v-model=\"newSystem.Description\"\n            :rules=\"textInputRules\"\n            :counter=\"100\"\n            label=\"Description\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.DimensionValue\"\n            :rules=\"numberInputRules\"\n            label=\"Dimension Value (m)\"\n          >\n          </v-text-field>\n\n      </v-card>\n\n      <!-- Card for availability -->\n\n      <v-card v-if=\"availabilitySlider\"\n        class=\"mx-auto\"\n        max-width=\"400\"\n        outlined\n        raised\n      > \n        <p>Availability</p>\n\n        <!-- Implement calendar date chooser -->\n          <v-text-field\n            v-model=\"newSystem.ReadyDate\"\n            label=\"Ready Date\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.TRL\"\n            :rules=\"trlInputRules\"\n            label=\"TRL (1-9)\"\n          >\n          </v-text-field>\n      </v-card>\n\n      <!-- Card for missions -->\n      <v-card v-if=\"missionsSlider\"\n        class=\"mx-auto\"\n        max-width=\"400\"\n        outlined\n        raised\n      >\n        <p>Missions</p>\n\n          <v-text-field\n            v-model=\"newSystem.MissionName\"\n            :rules=\"nameInputRules\"\n            label=\"Mission Name\"\n          >\n          </v-text-field>\n\n          <!-- Add calendar date picker -->\n          <p>\n            Mission Date  \n          </p> \n          <v-row justify=\"center\">\n            <v-date-picker \n              v-model=\"newSystem.missionDate\"\n              color='#a53f5b'\n            > {{ newSystem.missionDate }} </v-date-picker>\n          </v-row>\n          <!--\n          <v-text-field\n            v-model=\"newSystem.MissionDate\"\n            label=\"Mission Date\"\n          >\n          </v-text-field>\n          -->\n\n          <v-text-field\n            v-model=\"newSystem.DeltaV\"\n            :rules=\"numberInputRules\"\n            label=\"Delta V (m/s)\"\n          >\n          </v-text-field>\n\n      </v-card>\n\n      <!-- Card for missions -->\n      <v-card v-if=\"interfacesSlider\"\n        class=\"mx-auto\"\n        max-width=\"400\"\n        outlined\n        raised\n      >\n        <p>Interfaces</p>\n\n          <v-text-field\n            v-model=\"newSystem.InterfaceName\"\n            :rules=\"nameInputRules\"\n            label=\"Interface Name\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.InterfaceDescription\"\n            :rules=\"textInputRules\"\n            :counter=\"100\"\n            label=\"Interface Description\"\n          >\n          </v-text-field>\n\n          <v-btn>Click to add new Interface</v-btn>\n        \n      </v-card>\n\n      <v-row align=\"center\">\n        <v-col class=\"text-center\">\n        <v-btn \n            color='#a53f5b'\n            dark \n            large\n            v-on:click=\"create\"\n          >Create System\n         </v-btn>\n         \n         \n        <v-btn\n          @click=\"clear\"\n          light\n          large\n        >\n          Clear\n        </v-btn>\n         <v-divider></v-divider>\n\n        \n        <!-- confirmation message upon creation -->\n        <p v-if='APIResult'>Object inserted with ID: {{ APIResult.insertId }}</p>\n\n\n        </v-col>\n      </v-row>\n        \n\n    </div>\n  </div>\n</template>\n\n<script>\n  import ToolbarAdmin from '../components/Toolbar.vue';\n  import CreateAlert from '../components/CreateAlert.vue'\n  import { required, minLength, between } from 'vuelidate/lib/validators'\n  import axios from 'axios'\n\n  export default {\n    components: {\n      ToolbarAdmin,\n      CreateAlert\n    },\n    data () {\n      return {\n        // variables for slider state\n        dimensionsSlider: false,\n        availabilitySlider: false,\n        missionsSlider: false,\n        interfacesSlider: false,\n        picker: new Date(),\n        newSystem: {\n        },\n        APIResult: 130,\n        thrusterId: null,\n        nameInputRules: [\n          v => v && !!v || 'Required',\n          // Does not work on characters past first need to fix\n          v => v && /[a-zA-Z0-9]/.test(v) || 'No special characters allowed.',\n          v => v && v.length < 20 || 'Maximum length is 20 characters.'\n        ],\n        textInputRules: [\n          // no special characters\n          v => /[-_a-zA-Z]/.test(v) || 'No special characters allowed.',\n          v => v.length < 45 || 'Maximum length is 45 characters.'\n        ],\n        numberInputRules: [\n          v => /^[1-9]\\d*(\\.\\d+)?$/.test(v) || 'Value must be a number.',\n        ],\n        trlInputRules: [\n          v => v <= 9 || 'Value must be between 1 and 9.',\n          v => v && v != 0 || 'Value must be non-zero.'\n        ]\n      }\n    },\n    methods: {\n      // method to create a system\n      create() {\n        // Parse data from text fields into newSystem object\n        let newSystem = {\n          Thrust: {\n            name: this.newSystem.name,\n            thrust: this.newSystem.thrust,\n            specific_impulse: this.newSystem.specific_impulse,\n            manufacturer: this.newSystem.manufacturer,\n            propellant: this.newSystem.propellant,\n            system_efficiency: this.newSystem.system_efficiency,\n            weight: this.newSystem.weight,\n            input_power: this.newSystem.input_power,\n            reference: this.newSystem.reference\n          }        \n        }\n\n        let newSystemAdditional = {\n          thrusterId: this.APIResult,\n          Missions: {\n            mission_name: this.newSystem.MissionName,\n            mission_date: this.newSystem.MissionDate,\n            delta_v: this.newSystem.DeltaV\n          },\n          Dimensions: {\n            description: this.newSystem.Description,\n            dimension_value: this.newSystem.DimensionValue\n          }, \n          Interfaces: {\n            interface_name: this.newSystem.InterfaceName,\n            interface_description: this.newSystem.InterfaceDescription\n          },\n        }\n       \n        // Encode system object to be sent to backend\n        JSON.stringify(newSystem);\n\n        // Insert into the thruster table to receive the ID\n        /*\n        axios\n          .post('https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/create', newSystem)\n          .catch(function(error) {\n            console.log(error);\n          })\n          .then((response) => {\n            this.APIResult = response.data.body.insertId;\n            console.log(this.APIResult);\n            newSystemAdditional.thrusterId = this.APIResult;\n          });\n        */\n\n        //JSON.stringify(newSystemAdditional);\n        console.log(newSystemAdditional);\n        \n        axios\n          .post('https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/createtwo', newSystemAdditional)\n          .catch(function(error) {\n            console.log(error);\n          })\n          .then((response) => {\n            console.log(response.data);\n          })      \n        \n\n        console.log(this.APIResult);\n      },\n      clear() {\n        this.$refs.form.reset()\n      }\n    }\n  }\n</script>\n"]}]}