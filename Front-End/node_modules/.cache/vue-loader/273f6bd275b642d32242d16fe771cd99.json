{"remainingRequest":"/Users/perry/Hall-Thruster-Database/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/perry/Hall-Thruster-Database/src/views/CreateAdmin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/perry/Hall-Thruster-Database/src/views/CreateAdmin.vue","mtime":1582591630348},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/vuetify-loader/lib/loader.js","mtime":1567240333000},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBUb29sYmFyQWRtaW4gZnJvbSAnLi4vY29tcG9uZW50cy9Ub29sYmFyLnZ1ZSc7CmltcG9ydCBDcmVhdGVBbGVydCBmcm9tICcuLi9jb21wb25lbnRzL0NyZWF0ZUFsZXJ0LnZ1ZScKaW1wb3J0IHsgcmVxdWlyZWQsIG1pbkxlbmd0aCwgYmV0d2VlbiB9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycycKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFRvb2xiYXJBZG1pbiwKICAgIENyZWF0ZUFsZXJ0CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vIHZhcmlhYmxlcyBmb3Igc2xpZGVyIHN0YXRlCiAgICAgIGRpbWVuc2lvbnNTbGlkZXI6IGZhbHNlLAogICAgICBhdmFpbGFiaWxpdHlTbGlkZXI6IGZhbHNlLAogICAgICBtaXNzaW9uc1NsaWRlcjogZmFsc2UsCiAgICAgIGludGVyZmFjZXNTbGlkZXI6IGZhbHNlLAogICAgICBuZXdTeXN0ZW06IHsKICAgICAgfSwKICAgICAgQVBJUmVzdWx0OiAnJywKICAgICAgbmFtZUlucHV0UnVsZXM6IFsKICAgICAgICB2ID0+IHYgJiYgISF2IHx8ICdSZXF1aXJlZCcsCiAgICAgICAgLy8gRG9lcyBub3Qgd29yayBvbiBjaGFyYWN0ZXJzIHBhc3QgZmlyc3QgbmVlZCB0byBmaXgKICAgICAgICB2ID0+IHYgJiYgL1thLXpBLVowLTldLy50ZXN0KHYpIHx8ICdObyBzcGVjaWFsIGNoYXJhY3RlcnMgYWxsb3dlZC4nLAogICAgICAgIHYgPT4gdiAmJiB2Lmxlbmd0aCA8IDIwIHx8ICdNYXhpbXVtIGxlbmd0aCBpcyAyMCBjaGFyYWN0ZXJzLicKICAgICAgXSwKICAgICAgdGV4dElucHV0UnVsZXM6IFsKICAgICAgICAvLyBubyBzcGVjaWFsIGNoYXJhY3RlcnMKICAgICAgICB2ID0+IC9bLV9hLXpBLVpdLy50ZXN0KHYpIHx8ICdObyBzcGVjaWFsIGNoYXJhY3RlcnMgYWxsb3dlZC4nLAogICAgICAgIHYgPT4gdi5sZW5ndGggPCAyMCB8fCAnTWF4aW11bSBsZW5ndGggaXMgMjAgY2hhcmFjdGVycy4nCiAgICAgIF0sCiAgICAgIG51bWJlcklucHV0UnVsZXM6IFsKICAgICAgICB2ID0+IC9eWzEtOV1cZCooXC5cZCspPyQvLnRlc3QodikgfHwgJ1ZhbHVlIG11c3QgYmUgYSBudW1iZXIuJywKICAgICAgXSwKICAgICAgdHJsSW5wdXRSdWxlczogWwogICAgICAgIHYgPT4gdiA8PSA5IHx8ICdWYWx1ZSBtdXN0IGJlIGJldHdlZW4gMSBhbmQgOS4nLAogICAgICAgIHYgPT4gdiAmJiB2ICE9IDAgfHwgJ1ZhbHVlIG11c3QgYmUgbm9uLXplcm8uJwogICAgICBdCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBtZXRob2QgdG8gY3JlYXRlIGEgc3lzdGVtCiAgICBjcmVhdGUoKSB7CiAgICAgIC8vIFBhcnNlIGRhdGEgZnJvbSB0ZXh0IGZpZWxkcyBpbnRvIG5ld1N5c3RlbSBvYmplY3QKICAgICAgbGV0IG5ld1N5c3RlbSA9IHsKICAgICAgICBUaHJ1c3Q6IHsKICAgICAgICAgIE5hbWU6IHRoaXMubmV3U3lzdGVtLk5hbWUsCiAgICAgICAgICBUaHJ1c3Q6IHRoaXMubmV3U3lzdGVtLlRocnVzdCwKICAgICAgICAgIFNwZWNpZmljSW1wdWxzZTogdGhpcy5uZXdTeXN0ZW0uU3BlY2lmaWNJbXB1bHNlLAogICAgICAgICAgTWFudWZhY3R1cmVyOiB0aGlzLm5ld1N5c3RlbS5NYW51ZmFjdHVyZXIsCiAgICAgICAgICBQcm9wZWxsYW50OiB0aGlzLm5ld1N5c3RlbS5Qcm9wZWxsYW50LAogICAgICAgICAgV2VpZ2h0OiB0aGlzLm5ld1N5c3RlbS5XZWlnaHQsCiAgICAgICAgICBJbnB1dFBvd2VyOiB0aGlzLm5ld1N5c3RlbS5JbnB1dFBvd2VyCiAgICAgICAgfSwKICAgICAgICBEaW1lbnNpb25zOiB7CiAgICAgICAgICBEZXNjcmlwdGlvbjogdGhpcy5uZXdTeXN0ZW0uRGVzY3JpcHRpb24sCiAgICAgICAgICBEaW1lbnNpb25WYWx1ZTogdGhpcy5uZXdTeXN0ZW0uRGltZW5zaW9uVmFsdWUKCiAgICAgICAgfSwKICAgICAgICBBdmFpbGFiaWxpdHk6IHsKICAgICAgICAgIFJlYWR5RGF0ZTogdGhpcy5uZXdTeXN0ZW0uUmVhZHlEYXRlLAogICAgICAgICAgVFJMOiB0aGlzLm5ld1N5c3RlbS5UUkwKICAgICAgICB9LAogICAgICAgIE1pc3Npb25zOiB7CiAgICAgICAgICBNaXNzaW9uTmFtZTogdGhpcy5uZXdTeXN0ZW0uTWlzc2lvbk5hbWUsCiAgICAgICAgICBNaXNzaW9uRGF0ZTogdGhpcy5uZXdTeXN0ZW0uTWlzc2lvbkRhdGUsCiAgICAgICAgICBEZWx0YVY6IHRoaXMubmV3U3lzdGVtLkRlbHRhVgogICAgICAgIH0sCiAgICAgICAgSW50ZXJmYWNlczogewogICAgICAgICAgSW50ZXJmYWNlTmFtZTogdGhpcy5uZXdTeXN0ZW0uSW50ZXJmYWNlTmFtZSwKICAgICAgICAgIEludGVyZmFjZURlc2NyaXB0aW9uOiB0aGlzLm5ld1N5c3RlbS5JbnRlcmZhY2VEZXNjcmlwdGlvbgogICAgICAgIH0KCiAgICAgIH0KICAgICAgLy8gRW5jb2RlIHN5c3RlbSBvYmplY3QgdG8gYmUgc2VudCB0byBiYWNrZW5kCiAgICAgIEpTT04uc3RyaW5naWZ5KG5ld1N5c3RlbSkKCiAgICAgIC8vIEludGVncmF0ZSBWdWV4IFN0b3JlIGludG8gcmVzcG9uc2UKICAgICAgLy8gQ29tbWl0IHJlc3BvbnNlIHRvIHN0b3JlCiAgICAgIGF4aW9zCiAgICAgICAgLnBvc3QoJ2h0dHBzOi8vb2k5cjFyMDlrNi5leGVjdXRlLWFwaS51cy1lYXN0LTEuYW1hem9uYXdzLmNvbS9kZXBsb3ktc3RhZ2UvY3JlYXRlJywgbmV3U3lzdGVtKQogICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikgewogICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgIH0pCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICB0aGlzLkFQSVJlc3VsdCA9IHJlc3BvbnNlLmRhdGEuYm9keTsKICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuQVBJUmVzdWx0KTsKICAgICAgICB9KTsKCiAgICAgIGNvbnNvbGUubG9nKCkKCiAgICB9LAogICAgY2xlYXIoKSB7CiAgICAgIHRoaXMuJHJlZnMuZm9ybS5yZXNldCgpCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["CreateAdmin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0OA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"CreateAdmin.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"create\">\n    <v-content>\n        <ToolbarAdmin/>\n    </v-content>\n\n    <h1 class=\"text-center\">\n      System Creation\n    </h1>\n\n    <p class=\"text-center\">\n      Use the sliders to add more information.\n    </p>\n    <div id=\"Textboxes\">\n      <v-row align=\"center\">\n        <v-row justify=\"space-around\">\n          <v-switch  v-model=\"dimensionsSlider\" class=\"ma-4\" label=\"Dimensions\" value=\"true\" append-icon=\"mdi-rocket\"></v-switch>\n          <v-switch v-model=\"availabilitySlider\" class=\"ma-4\" label=\"Availability\" value=\"true\" append-icon=\"mdi-calendar\"></v-switch>\n          <v-switch v-model=\"missionsSlider\" class=\"ma-4\" label=\"Missions\" value=\"true\" append-icon=\"mdi-clipboard-list-outline\"></v-switch>\n          <v-switch v-model=\"interfacesSlider\" class=\"ma-4\" label=\"Interfaces\" value=\"true\" append-icon=\"mdi-console\"></v-switch>\n        </v-row>\n      </v-row>\n\n    <!-- Card for Thruster input fields -->\n      <v-card\n        class=\"mx-auto\"\n        max-width=\"400\"\n        outlined\n        raised\n      >\n        <v-form\n          ref=\"form\"\n        >\n        <v-container>\n          <p>Thruster</p>\n\n          <v-text-field\n            v-model=\"newSystem.Name\"\n            :rules=\"nameInputRules\"\n            label=\"Name\"\n            required\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.Thrust\"\n            :rules=\"numberInputRules\"\n            label=\"Thrust (mN)\"\n            required\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.SpecificImpulse\"\n            :rules=\"numberInputRules\"\n            label=\"Specific Impulse (s)\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.Manufacturer\"\n            :rules=\"nameInputRules\"\n            label=\"Manufacturer\"\n            required\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.Propellant\"\n            :rules=\"textInputRules\"\n            label=\"Propellant\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.Weight\"\n            :rules=\"numberInputRules\"\n            label=\"Weight (kg)\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.InputPower\"\n            :rules=\"numberInputRules\"\n            label=\"Input Power (W)\"\n          >\n          </v-text-field>\n\n          </v-container>\n        </v-form>\n      </v-card>\n\n      <!-- Card for dimensions -->\n\n      <v-card v-if=\"dimensionsSlider\"\n        class=\"mx-auto\"\n        max-width=\"400\"\n        outlined\n        raised\n      >\n        <p>Dimensions</p>\n\n          <v-text-field\n            v-model=\"newSystem.Description\"\n            :rules=\"textInputRules\"\n            :counter=\"100\"\n            label=\"Description\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.DimensionValue\"\n            :rules=\"numberInputRules\"\n            label=\"Dimension Value (m)\"\n          >\n          </v-text-field>\n\n      </v-card>\n\n      <!-- Card for availability -->\n\n      <v-card v-if=\"availabilitySlider\"\n        class=\"mx-auto\"\n        max-width=\"400\"\n        outlined\n        raised\n      >\n        <p>Availability</p>\n\n        <!-- Implement calendar date chooser -->\n          <v-text-field\n            v-model=\"newSystem.ReadyDate\"\n            label=\"Ready Date\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.TRL\"\n            :rules=\"trlInputRules\"\n            label=\"TRL (1-9)\"\n          >\n          </v-text-field>\n      </v-card>\n\n      <!-- Card for missions -->\n      <v-card v-if=\"missionsSlider\"\n        class=\"mx-auto\"\n        max-width=\"400\"\n        outlined\n        raised\n      >\n        <p>Missions</p>\n\n          <v-text-field\n            v-model=\"newSystem.MissionName\"\n            :rules=\"nameInputRules\"\n            label=\"Mission Name\"\n          >\n          </v-text-field>\n\n          <!-- Add calendar date picker -->\n          <v-text-field\n            v-model=\"newSystem.MissionDate\"\n            label=\"Mission Date\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.DeltaV\"\n            :rules=\"numberInputRules\"\n            label=\"Delta V (m/s)\"\n          >\n          </v-text-field>\n\n      </v-card>\n\n      <!-- Card for missions -->\n      <v-card v-if=\"interfacesSlider\"\n        class=\"mx-auto\"\n        max-width=\"400\"\n        outlined\n        raised\n      >\n        <p>Interfaces</p>\n\n          <v-text-field\n            v-model=\"newSystem.InterfaceName\"\n            :rules=\"nameInputRules\"\n            label=\"Interface Name\"\n          >\n          </v-text-field>\n\n          <v-text-field\n            v-model=\"newSystem.InterfaceDescription\"\n            :rules=\"textInputRules\"\n            :counter=\"100\"\n            label=\"Interface Description\"\n          >\n          </v-text-field>\n\n          <v-btn>Click to add new Interface</v-btn>\n        \n      </v-card>\n\n      <v-row align=\"center\">\n        <v-col class=\"text-center\">\n        <v-btn \n            color=\"error\"\n            dark \n            large\n            v-on:click=\"create\"\n          >Create System\n         </v-btn>\n         <v-divider></v-divider>\n        <v-btn\n          @click=\"clear\"\n          light\n          large\n        >\n          Clear\n        </v-btn>\n        \n        <!-- confirmation message upon creation -->\n        <p v-if='APIResult'>Object inserted with ID: {{ APIResult.insertId }}</p>\n\n        </v-col>\n      </v-row>\n        \n\n    </div>\n  </div>\n</template>\n\n<script>\n  import ToolbarAdmin from '../components/Toolbar.vue';\n  import CreateAlert from '../components/CreateAlert.vue'\n  import { required, minLength, between } from 'vuelidate/lib/validators'\n  import axios from 'axios'\n\n  export default {\n    components: {\n      ToolbarAdmin,\n      CreateAlert\n    },\n    data () {\n      return {\n        // variables for slider state\n        dimensionsSlider: false,\n        availabilitySlider: false,\n        missionsSlider: false,\n        interfacesSlider: false,\n        newSystem: {\n        },\n        APIResult: '',\n        nameInputRules: [\n          v => v && !!v || 'Required',\n          // Does not work on characters past first need to fix\n          v => v && /[a-zA-Z0-9]/.test(v) || 'No special characters allowed.',\n          v => v && v.length < 20 || 'Maximum length is 20 characters.'\n        ],\n        textInputRules: [\n          // no special characters\n          v => /[-_a-zA-Z]/.test(v) || 'No special characters allowed.',\n          v => v.length < 20 || 'Maximum length is 20 characters.'\n        ],\n        numberInputRules: [\n          v => /^[1-9]\\d*(\\.\\d+)?$/.test(v) || 'Value must be a number.',\n        ],\n        trlInputRules: [\n          v => v <= 9 || 'Value must be between 1 and 9.',\n          v => v && v != 0 || 'Value must be non-zero.'\n        ]\n      }\n    },\n    methods: {\n      // method to create a system\n      create() {\n        // Parse data from text fields into newSystem object\n        let newSystem = {\n          Thrust: {\n            Name: this.newSystem.Name,\n            Thrust: this.newSystem.Thrust,\n            SpecificImpulse: this.newSystem.SpecificImpulse,\n            Manufacturer: this.newSystem.Manufacturer,\n            Propellant: this.newSystem.Propellant,\n            Weight: this.newSystem.Weight,\n            InputPower: this.newSystem.InputPower\n          },\n          Dimensions: {\n            Description: this.newSystem.Description,\n            DimensionValue: this.newSystem.DimensionValue\n\n          },\n          Availability: {\n            ReadyDate: this.newSystem.ReadyDate,\n            TRL: this.newSystem.TRL\n          },\n          Missions: {\n            MissionName: this.newSystem.MissionName,\n            MissionDate: this.newSystem.MissionDate,\n            DeltaV: this.newSystem.DeltaV\n          },\n          Interfaces: {\n            InterfaceName: this.newSystem.InterfaceName,\n            InterfaceDescription: this.newSystem.InterfaceDescription\n          }\n\n        }\n        // Encode system object to be sent to backend\n        JSON.stringify(newSystem)\n\n        // Integrate Vuex Store into response\n        // Commit response to store\n        axios\n          .post('https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/create', newSystem)\n          .catch(function(error) {\n            console.log(error);\n          })\n          .then((response) => {\n            this.APIResult = response.data.body;\n            console.log(this.APIResult);\n          });\n\n        console.log()\n\n      },\n      clear() {\n        this.$refs.form.reset()\n      }\n    }\n  }\n</script>\n"]}]}