{"remainingRequest":"/Users/perry/Hall-Thruster-Database/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/perry/Hall-Thruster-Database/src/views/Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/perry/Hall-Thruster-Database/src/views/Edit.vue","mtime":1582896014763},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgQXhpb3MgZnJvbSAnYXhpb3MnCmltcG9ydCBUb29sYmFyR3Vlc3QgZnJvbSAnLi4vY29tcG9uZW50cy9Ub29sYmFyLnZ1ZSc7CnZhciB4OwpleHBvcnQgZGVmYXVsdCBWdWUuZXh0ZW5kKHsKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBUb29sYmFyR3Vlc3QKICAgIH0sCgogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICByZW5kZXJGb3JtOiAnZmFsc2UnLAogICAgICAgICAgICB0aHJ1c3Rlck5hbWVzOltdLAogICAgICAgICAgICBzZWxlY3RlZEl0ZW06IDAsCiAgICAgICAgICAgIGRpYWxvZzogZmFsc2UsCiAgICAgICAgICAgIC8vIG5hbWVJbnB1dFJ1bGVzOiBbCiAgICAgICAgICAgIC8vICAgICB2ID0+IHYgJiYgISF2IHx8ICdSZXF1aXJlZCcsCiAgICAgICAgICAgIC8vICAgICAvLyBEb2VzIG5vdCB3b3JrIG9uIGNoYXJhY3RlcnMgcGFzdCBmaXJzdCBuZWVkIHRvIGZpeAogICAgICAgICAgICAvLyAgICAgdiA9PiB2ICYmIC9bYS16QS1aMC05XS8udGVzdCh2KSB8fCAnTm8gc3BlY2lhbCBjaGFyYWN0ZXJzIGFsbG93ZWQuJywKICAgICAgICAgICAgLy8gICAgIHYgPT4gdiAmJiB2Lmxlbmd0aCA8IDIwIHx8ICdNYXhpbXVtIGxlbmd0aCBpcyAyMCBjaGFyYWN0ZXJzLicKICAgICAgICAgICAgLy8gXSwKICAgICAgICAgICAgLy8gdGV4dElucHV0UnVsZXM6IFsKICAgICAgICAgICAgLy8gICAgIC8vIG5vIHNwZWNpYWwgY2hhcmFjdGVycwogICAgICAgICAgICAvLyAgICAgdiA9PiAvWy1fYS16QS1aXS8udGVzdCh2KSB8fCAnTm8gc3BlY2lhbCBjaGFyYWN0ZXJzIGFsbG93ZWQuJywKICAgICAgICAgICAgLy8gICAgIHYgPT4gdi5sZW5ndGggPCAyMCB8fCAnTWF4aW11bSBsZW5ndGggaXMgMjAgY2hhcmFjdGVycy4nCiAgICAgICAgICAgIC8vIF0sCiAgICAgICAgICAgIC8vIG51bWJlcklucHV0UnVsZXM6IFsKICAgICAgICAgICAgLy8gICAgIHYgPT4gL15bMS05XVxkKihcLlxkKyk/JC8udGVzdCh2KSB8fCAnVmFsdWUgbXVzdCBiZSBhIG51bWJlci4nLAogICAgICAgICAgICAvLyBdLAogICAgICAgICAgICAvLyB0cmxJbnB1dFJ1bGVzOiBbCiAgICAgICAgICAgIC8vICAgICB2ID0+IHYgPD0gOSB8fCAnVmFsdWUgbXVzdCBiZSBiZXR3ZWVuIDEgYW5kIDkuJywKICAgICAgICAgICAgLy8gICAgIHYgPT4gdiAmJiB2ICE9IDAgfHwgJ1ZhbHVlIG11c3QgYmUgbm9uLXplcm8uJwogICAgICAgICAgICAvLyBdLAogICAgICAgICAgICBzeXN0ZW06IHsKCiAgICAgICAgICAgIH0sCgogICAgICAgIH07CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHVwZGF0ZVJlY29yZCgpIHsKICAgICAgICAgICAgbGV0IHN5c3RlbSA9IHsKICAgICAgICAgICAgICAgIFRocnVzdDogewogICAgICAgICAgICAgICAgICAgIElEOiB0aGlzLnN5c3RlbS5JRCwKICAgICAgICAgICAgICAgICAgICBOYW1lOiB0aGlzLnN5c3RlbS5OYW1lLAogICAgICAgICAgICAgICAgICAgIFRocnVzdDogdGhpcy5zeXN0ZW0uVGhydXN0LAogICAgICAgICAgICAgICAgICAgIFNwZWNpZmljSW1wdWxzZTogdGhpcy5zeXN0ZW0uU3BlY2lmaWNJbXB1bHNlLAogICAgICAgICAgICAgICAgICAgIE1hbnVmYWN0dXJlcjogdGhpcy5zeXN0ZW0uTWFudWZhY3R1cmVyLAogICAgICAgICAgICAgICAgICAgIFByb3BlbGxhbnQ6IHRoaXMuc3lzdGVtLlByb3BlbGxhbnQsCiAgICAgICAgICAgICAgICAgICAgV2VpZ2h0OiB0aGlzLnN5c3RlbS5XZWlnaHQsCiAgICAgICAgICAgICAgICAgICAgSW5wdXRQb3dlcjogdGhpcy5zeXN0ZW0uSW5wdXRQb3dlcgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIERpbWVuc2lvbnM6IHsKICAgICAgICAgICAgICAgICAgICBEZXNjcmlwdGlvbjogdGhpcy5zeXN0ZW0uRGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgICAgICAgRGltZW5zaW9uVmFsdWU6IHRoaXMuc3lzdGVtLkRpbWVuc2lvblZhbHVlCgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIEF2YWlsYWJpbGl0eTogewogICAgICAgICAgICAgICAgICAgIFJlYWR5RGF0ZTogdGhpcy5zeXN0ZW0uUmVhZHlEYXRlLAogICAgICAgICAgICAgICAgICAgIFRSTDogdGhpcy5zeXN0ZW0uVFJMCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgTWlzc2lvbnM6IHsKICAgICAgICAgICAgICAgICAgICBNaXNzaW9uTmFtZTogdGhpcy5zeXN0ZW0uTWlzc2lvbk5hbWUsCiAgICAgICAgICAgICAgICAgICAgTWlzc2lvbkRhdGU6IHRoaXMuc3lzdGVtLk1pc3Npb25EYXRlLAogICAgICAgICAgICAgICAgICAgIERlbHRhVjogdGhpcy5zeXN0ZW0uRGVsdGFWCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgSW50ZXJmYWNlczogewogICAgICAgICAgICAgICAgICAgIEludGVyZmFjZU5hbWU6IHRoaXMuc3lzdGVtLkludGVyZmFjZU5hbWUsCiAgICAgICAgICAgICAgICAgICAgSW50ZXJmYWNlRGVzY3JpcHRpb246IHRoaXMuc3lzdGVtLkludGVyZmFjZURlc2NyaXB0aW9uCiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICB9CiAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KHN5c3RlbSkKICAgICAgICAgICAgL2FsZXJ0KCJUaHJ1c3RlcjogIiArIHRoaXMuc3lzdGVtLm5hbWUgKyAiIGhhcyBiZWVuIHVwZGF0ZWQuIikKICAgICAgICAgICAgY29uc29sZS5sb2coIlVwZGF0ZWQgc3lzdGVtOiAiKQogICAgICAgICAgICBjb25zb2xlLmxvZyggdGhpcy5zeXN0ZW0pCiAgICAgICAgICAgIEF4aW9zCiAgICAgICAgICAgICAgICAvLyAucHV0KCdodHRwczovL29pOXIxcjA5azYuZXhlY3V0ZS1hcGkudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vZGVwbG95LXN0YWdlL2VkaXQnLCBzeXN0ZW0pCiAgICAgICAgICAgICAgICAucG9zdCgnaHR0cHM6Ly9vaTlyMXIwOWs2LmV4ZWN1dGUtYXBpLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tL2RlcGxveS1zdGFnZS9tb2RpZnknLCBzeXN0ZW0pCiAgICAgICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7bmFtZTogJ3JldHJpZXZlIHN5c3RlbSd9KQogICAgICAgIH0sCgogICAgICAgIGRlbGV0ZSgpIHsKICAgICAgICAgICAgLy9kbyBzdHVmZgogICAgICAgIH0sCiAgICAgICAgbG9hZERhdGEoZXZlbnQpewogICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudCk7CiAgICAgICAgICAgIHggPSBldmVudDsKICAgICAgICAgICAgQXhpb3MuZ2V0KGBodHRwczovL29pOXIxcjA5azYuZXhlY3V0ZS1hcGkudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vZGVwbG95LXN0YWdlL2dldEJ5SWQ/aWQ9JHt4fWApCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zeXN0ZW0gPSByZXNwb25zZS5kYXRhLmJvZHlbMF0sCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJHZXR0aW5nIERhdGEiKTsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5zeXN0ZW0pOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5jYXRjaChlcnJvcnMgPT4gY29uc29sZS5sb2coZXJyb3JzKSk7CiAgICAgICAgICAgIHRoaXMucmVuZGVyRm9ybSA9ICd0cnVlJzsKCiAgICAgICAgfSwKCgogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgQXhpb3MKICAgICAgICAgICAgLmdldCgnaHR0cHM6Ly9vaTlyMXIwOWs2LmV4ZWN1dGUtYXBpLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tL2RlcGxveS1zdGFnZS9yZXRyaWV2ZScpCiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHt0aGlzLnRocnVzdGVyTmFtZXMgPSByZXNwb25zZS5kYXRhLmJvZHl9KQogICAgICAgICAgICAuY2F0Y2goZXJyb3JzID0+IGNvbnNvbGUubG9nKGVycm9ycykpOwogICAgfQp9KQo="},{"version":3,"sources":["Edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Edit.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"edit\">\n        <v-content>\n            <div>\n                <ToolbarGuest />\n            </div>\n        </v-content>\n\n<!--        Selecting thruster to edit and loading its data-->\n\n        <v-container grid-list-sm >\n            <v-col lg=\"6\" >\n                <v-flex>\n                    <v-select\n                            :items = \"thrusterNames\"\n                            item-text = \"name\"\n                            item-value = \"id\"\n                            v-model = \"selectedItem\"\n                            @change = \"loadData($event)\"\n                            label=\"Select a thruster to modify\"\n                            segmented overflow editable\n                            target=\"#target\"\n\n                    ></v-select>\n                </v-flex>\n            </v-col>\n        </v-container>\n\n        <v-dialog\n                v-model=\"dialog\"\n                max-width=\"600\"\n        >\n            <v-card>\n                <v-card-title class=\"text-center\"> Edit Thruster </v-card-title>\n\n                <v-form ref=\"form\" >\n                    <v-text-field\n                            v-model=\"name\"\n                            label=\"Name\"\n                            required\n                    >\n                    </v-text-field>\n\n                </v-form>\n\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n\n                    <v-btn\n                            color=\"error\"\n                            text\n                            @click=\"dialog = false\"\n                    >\n                        Cancel\n                    </v-btn>\n\n                    <v-btn\n                            color=\"success\"\n                            text\n                            @click=\"editRecord(name)\"\n                    >\n                        Save\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n\n\n        <v-card\n                class=\"mx-auto\"\n                max-width=\"50%\"\n                outlined\n                raised\n                v-if=\"renderForm === 'true'\"\n        >\n\n            <v-container>\n                <form >\n                    <v-text-field\n                            v-model=\"system.name\"\n                            label=\"Name\"\n                            required\n                    >\n                    </v-text-field>\n\n                    <v-text-field\n                            v-model=\"system.thrust\"\n                            label=\"Thrust (mN)\"\n                            required\n                    >\n                    </v-text-field>\n\n\n                    <v-text-field\n                            v-model=\"system['specific_impulse']\"\n                            label=\"Specific Impulse (s)\"\n                    >\n                    </v-text-field>\n\n                    <v-text-field\n                            v-model=\"system['manufacturer']\"\n                            label=\"Manufacturer\"\n                            required\n                    >\n                    </v-text-field>\n\n                    <v-text-field\n                            v-model=\"system['propellant']\"\n                            label=\"Propellant\"\n                    >\n                    </v-text-field>\n\n                    <v-text-field\n                            v-model=\"system.weight\"\n                            label=\"Weight (kg)\"\n                    >\n                    </v-text-field>\n\n                    <v-text-field\n                            v-model=\"system['input_power']\"\n                            label=\"Input Power (W)\"\n                    >\n                    </v-text-field>\n\n                    <!--                    Add other tables w/ multiple query                     -->\n\n\n                    <v-btn class=\"mr-4\" @click=\"updateRecord\">Update</v-btn>\n                </form>\n\n            </v-container>\n\n\n        </v-card>\n        <v-spacer>.</v-spacer>\n    </div>\n</template>\n\n<script lang=\"js\">\n    import Vue from 'vue'\n    import Axios from 'axios'\n    import ToolbarGuest from '../components/Toolbar.vue';\n    var x;\n    export default Vue.extend({\n        components: {\n            ToolbarGuest\n        },\n\n        data() {\n            return {\n                renderForm: 'false',\n                thrusterNames:[],\n                selectedItem: 0,\n                dialog: false,\n                // nameInputRules: [\n                //     v => v && !!v || 'Required',\n                //     // Does not work on characters past first need to fix\n                //     v => v && /[a-zA-Z0-9]/.test(v) || 'No special characters allowed.',\n                //     v => v && v.length < 20 || 'Maximum length is 20 characters.'\n                // ],\n                // textInputRules: [\n                //     // no special characters\n                //     v => /[-_a-zA-Z]/.test(v) || 'No special characters allowed.',\n                //     v => v.length < 20 || 'Maximum length is 20 characters.'\n                // ],\n                // numberInputRules: [\n                //     v => /^[1-9]\\d*(\\.\\d+)?$/.test(v) || 'Value must be a number.',\n                // ],\n                // trlInputRules: [\n                //     v => v <= 9 || 'Value must be between 1 and 9.',\n                //     v => v && v != 0 || 'Value must be non-zero.'\n                // ],\n                system: {\n\n                },\n\n            };\n        },\n        methods: {\n            updateRecord() {\n                let system = {\n                    Thrust: {\n                        ID: this.system.ID,\n                        Name: this.system.Name,\n                        Thrust: this.system.Thrust,\n                        SpecificImpulse: this.system.SpecificImpulse,\n                        Manufacturer: this.system.Manufacturer,\n                        Propellant: this.system.Propellant,\n                        Weight: this.system.Weight,\n                        InputPower: this.system.InputPower\n                    },\n                    Dimensions: {\n                        Description: this.system.Description,\n                        DimensionValue: this.system.DimensionValue\n\n                    },\n                    Availability: {\n                        ReadyDate: this.system.ReadyDate,\n                        TRL: this.system.TRL\n                    },\n                    Missions: {\n                        MissionName: this.system.MissionName,\n                        MissionDate: this.system.MissionDate,\n                        DeltaV: this.system.DeltaV\n                    },\n                    Interfaces: {\n                        InterfaceName: this.system.InterfaceName,\n                        InterfaceDescription: this.system.InterfaceDescription\n                    }\n\n                }\n                JSON.stringify(system)\n                /alert(\"Thruster: \" + this.system.name + \" has been updated.\")\n                console.log(\"Updated system: \")\n                console.log( this.system)\n                Axios\n                    // .put('https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/edit', system)\n                    .post('https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/modify', system)\n                    .catch(function(error) {\n                        console.log(error);\n                    })\n                this.$router.push({name: 'retrieve system'})\n            },\n\n            delete() {\n                //do stuff\n            },\n            loadData(event){\n                console.log(event);\n                x = event;\n                Axios.get(`https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/getById?id=${x}`)\n                    .then(response => {\n                        this.system = response.data.body[0],\n                            console.log(\"Getting Data\");\n                            console.log(this.system);\n                    })\n                    .catch(errors => console.log(errors));\n                this.renderForm = 'true';\n\n            },\n\n\n        },\n        mounted() {\n            Axios\n                .get('https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/retrieve')\n                .then(response => {this.thrusterNames = response.data.body})\n                .catch(errors => console.log(errors));\n        }\n    })\n</script>"]}]}