{"remainingRequest":"/Users/perry/Hall-Thruster-Database/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/perry/Hall-Thruster-Database/src/views/Edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/perry/Hall-Thruster-Database/src/views/Edit.vue","mtime":1587438144445},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/perry/Hall-Thruster-Database/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnCmltcG9ydCBBeGlvcyBmcm9tICdheGlvcycKaW1wb3J0IFRvb2xiYXJHdWVzdCBmcm9tICcuLi9jb21wb25lbnRzL1Rvb2xiYXIudnVlJzsKdmFyIHg7CmV4cG9ydCBkZWZhdWx0IFZ1ZS5leHRlbmQoewogICAgY29tcG9uZW50czogewogICAgICAgIFRvb2xiYXJHdWVzdAogICAgfSwKCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHJlbmRlckZvcm06ICdmYWxzZScsCiAgICAgICAgICAgIHRocnVzdGVyTmFtZXM6W10sCiAgICAgICAgICAgIHNlbGVjdGVkSXRlbTogMCwKICAgICAgICAgICAgZGlhbG9nOiBmYWxzZSwKICAgICAgICAgICAgLy8gbmFtZUlucHV0UnVsZXM6IFsKICAgICAgICAgICAgLy8gICAgIHYgPT4gdiAmJiAhIXYgfHwgJ1JlcXVpcmVkJywKICAgICAgICAgICAgLy8gICAgIC8vIERvZXMgbm90IHdvcmsgb24gY2hhcmFjdGVycyBwYXN0IGZpcnN0IG5lZWQgdG8gZml4CiAgICAgICAgICAgIC8vICAgICB2ID0+IHYgJiYgL1thLXpBLVowLTldLy50ZXN0KHYpIHx8ICdObyBzcGVjaWFsIGNoYXJhY3RlcnMgYWxsb3dlZC4nLAogICAgICAgICAgICAvLyAgICAgdiA9PiB2ICYmIHYubGVuZ3RoIDwgMjAgfHwgJ01heGltdW0gbGVuZ3RoIGlzIDIwIGNoYXJhY3RlcnMuJwogICAgICAgICAgICAvLyBdLAogICAgICAgICAgICAvLyB0ZXh0SW5wdXRSdWxlczogWwogICAgICAgICAgICAvLyAgICAgLy8gbm8gc3BlY2lhbCBjaGFyYWN0ZXJzCiAgICAgICAgICAgIC8vICAgICB2ID0+IC9bLV9hLXpBLVpdLy50ZXN0KHYpIHx8ICdObyBzcGVjaWFsIGNoYXJhY3RlcnMgYWxsb3dlZC4nLAogICAgICAgICAgICAvLyAgICAgdiA9PiB2Lmxlbmd0aCA8IDIwIHx8ICdNYXhpbXVtIGxlbmd0aCBpcyAyMCBjaGFyYWN0ZXJzLicKICAgICAgICAgICAgLy8gXSwKICAgICAgICAgICAgLy8gbnVtYmVySW5wdXRSdWxlczogWwogICAgICAgICAgICAvLyAgICAgdiA9PiAvXlsxLTldXGQqKFwuXGQrKT8kLy50ZXN0KHYpIHx8ICdWYWx1ZSBtdXN0IGJlIGEgbnVtYmVyLicsCiAgICAgICAgICAgIC8vIF0sCiAgICAgICAgICAgIC8vIHRybElucHV0UnVsZXM6IFsKICAgICAgICAgICAgLy8gICAgIHYgPT4gdiA8PSA5IHx8ICdWYWx1ZSBtdXN0IGJlIGJldHdlZW4gMSBhbmQgOS4nLAogICAgICAgICAgICAvLyAgICAgdiA9PiB2ICYmIHYgIT0gMCB8fCAnVmFsdWUgbXVzdCBiZSBub24temVyby4nCiAgICAgICAgICAgIC8vIF0sCiAgICAgICAgICAgIHN5c3RlbTogewoKICAgICAgICAgICAgfSwKCiAgICAgICAgfTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgdXBkYXRlUmVjb3JkKCkgewogICAgICAgICAgICBsZXQgc3lzdGVtID0gewogICAgICAgICAgICAgICAgVGhydXN0OiB7CiAgICAgICAgICAgICAgICAgICAgSUQ6IHRoaXMuc3lzdGVtLklELAogICAgICAgICAgICAgICAgICAgIE5hbWU6IHRoaXMuc3lzdGVtLk5hbWUsCiAgICAgICAgICAgICAgICAgICAgVGhydXN0OiB0aGlzLnN5c3RlbS5UaHJ1c3QsCiAgICAgICAgICAgICAgICAgICAgU3BlY2lmaWNJbXB1bHNlOiB0aGlzLnN5c3RlbS5TcGVjaWZpY0ltcHVsc2UsCiAgICAgICAgICAgICAgICAgICAgTWFudWZhY3R1cmVyOiB0aGlzLnN5c3RlbS5NYW51ZmFjdHVyZXIsCiAgICAgICAgICAgICAgICAgICAgUHJvcGVsbGFudDogdGhpcy5zeXN0ZW0uUHJvcGVsbGFudCwKICAgICAgICAgICAgICAgICAgICBXZWlnaHQ6IHRoaXMuc3lzdGVtLldlaWdodCwKICAgICAgICAgICAgICAgICAgICBJbnB1dFBvd2VyOiB0aGlzLnN5c3RlbS5JbnB1dFBvd2VyCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgRGltZW5zaW9uczogewogICAgICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiB0aGlzLnN5c3RlbS5EZXNjcmlwdGlvbiwKICAgICAgICAgICAgICAgICAgICBEaW1lbnNpb25WYWx1ZTogdGhpcy5zeXN0ZW0uRGltZW5zaW9uVmFsdWUKCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgLy8gQXZhaWxhYmlsaXR5OiB7CiAgICAgICAgICAgICAgICAvLyAgICAgUmVhZHlEYXRlOiB0aGlzLnN5c3RlbS5SZWFkeURhdGUsCiAgICAgICAgICAgICAgICAvLyAgICAgVFJMOiB0aGlzLnN5c3RlbS5UUkwKICAgICAgICAgICAgICAgIC8vIH0sCiAgICAgICAgICAgICAgICBNaXNzaW9uczogewogICAgICAgICAgICAgICAgICAgIE1pc3Npb25OYW1lOiB0aGlzLnN5c3RlbS5NaXNzaW9uTmFtZSwKICAgICAgICAgICAgICAgICAgICBNaXNzaW9uRGF0ZTogdGhpcy5zeXN0ZW0uTWlzc2lvbkRhdGUsCiAgICAgICAgICAgICAgICAgICAgRGVsdGFWOiB0aGlzLnN5c3RlbS5EZWx0YVYKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBJbnRlcmZhY2VzOiB7CiAgICAgICAgICAgICAgICAgICAgSW50ZXJmYWNlTmFtZTogdGhpcy5zeXN0ZW0uSW50ZXJmYWNlTmFtZSwKICAgICAgICAgICAgICAgICAgICBJbnRlcmZhY2VEZXNjcmlwdGlvbjogdGhpcy5zeXN0ZW0uSW50ZXJmYWNlRGVzY3JpcHRpb24KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIH0KICAgICAgICAgICAgSlNPTi5zdHJpbmdpZnkoc3lzdGVtKQogICAgICAgICAgICBhbGVydCgiVGhydXN0ZXI6ICIgKyB0aGlzLnN5c3RlbS5uYW1lICsgIiBoYXMgYmVlbiB1cGRhdGVkLiIpCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJVcGRhdGVkIHN5c3RlbTogIikKICAgICAgICAgICAgY29uc29sZS5sb2coIHRoaXMuc3lzdGVtKQogICAgICAgICAgICBBeGlvc3cKICAgICAgICAgICAgICAgIC8vIC5wdXQoJ2h0dHBzOi8vb2k5cjFyMDlrNi5leGVjdXRlLWFwaS51cy1lYXN0LTEuYW1hem9uYXdzLmNvbS9kZXBsb3ktc3RhZ2UvZWRpdCcsIHN5c3RlbSkKICAgICAgICAgICAgICAgIC5wb3N0KCdodHRwczovL29pOXIxcjA5azYuZXhlY3V0ZS1hcGkudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vZGVwbG95LXN0YWdlL21vZGlmeScsIHN5c3RlbSkKICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnJvcikgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHtuYW1lOiAncmV0cmlldmUgc3lzdGVtJ30pCiAgICAgICAgfSwKCiAgICAgICAgZGVsZXRlKCkgewogICAgICAgICAgICAvL2RvIHN0dWZmCiAgICAgICAgfSwKICAgICAgICBsb2FkRGF0YShldmVudCl7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2ZW50KTsKICAgICAgICAgICAgeCA9IGV2ZW50OwogICAgICAgICAgICBBeGlvcy5nZXQoYGh0dHBzOi8vb2k5cjFyMDlrNi5leGVjdXRlLWFwaS51cy1lYXN0LTEuYW1hem9uYXdzLmNvbS9kZXBsb3ktc3RhZ2UvZ2V0QnlJZD9pZD0ke3h9YCkKICAgICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnN5c3RlbSA9IHJlc3BvbnNlLmRhdGEuYm9keVswXSwKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkdldHRpbmcgRGF0YSIpOwogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnN5c3RlbSk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmNhdGNoKGVycm9ycyA9PiBjb25zb2xlLmxvZyhlcnJvcnMpKTsKICAgICAgICAgICAgdGhpcy5yZW5kZXJGb3JtID0gJ3RydWUnOwoKICAgICAgICB9LAoKCiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICBBeGlvcwogICAgICAgICAgICAuZ2V0KCdodHRwczovL29pOXIxcjA5azYuZXhlY3V0ZS1hcGkudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vZGVwbG95LXN0YWdlL3JldHJpZXZlJykKICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge3RoaXMudGhydXN0ZXJOYW1lcyA9IHJlc3BvbnNlLmRhdGEuYm9keX0pCiAgICAgICAgICAgIC5jYXRjaChlcnJvcnMgPT4gY29uc29sZS5sb2coZXJyb3JzKSk7CiAgICB9Cn0pCg=="},{"version":3,"sources":["Edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Edit.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"edit\">\n        <v-content>\n            <div>\n                <ToolbarGuest />\n            </div>\n        </v-content>\n\n<!--        Selecting thruster to edit and loading its data-->\n\n        <v-container grid-list-sm >\n            <v-col lg=\"6\" >\n                <v-flex>\n                    <v-select\n                            :items = \"thrusterNames\"\n                            item-text = \"name\"\n                            item-value = \"id\"\n                            v-model = \"selectedItem\"\n                            @change = \"loadData($event)\"\n                            label=\"Select a thruster to modify\"\n                            segmented overflow editable\n                            target=\"#target\"\n\n                    ></v-select>\n                </v-flex>\n            </v-col>\n        </v-container>\n\n        <v-dialog\n                v-model=\"dialog\"\n                max-width=\"600\"\n        >\n            <v-card>\n                <v-card-title class=\"text-center\"> Edit Thruster </v-card-title>\n\n                <v-form ref=\"form\" >\n                    <v-text-field\n                            v-model=\"name\"\n                            label=\"Name\"\n                            required\n                    >\n                    </v-text-field>\n\n                </v-form>\n\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n\n                    <v-btn\n                            color=\"error\"\n                            text\n                            @click=\"dialog = false\"\n                    >\n                        Cancel\n                    </v-btn>\n\n                    <v-btn\n                            color=\"success\"\n                            text\n                            @click=\"editRecord(name)\"\n                    >\n                        Save\n                    </v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n\n\n        <v-card\n                class=\"mx-auto\"\n                max-width=\"50%\"\n                outlined\n                raised\n                v-if=\"renderForm === 'true'\"\n        >\n\n            <v-container>\n                <form >\n                    <v-text-field\n                            v-model=\"system.name\"\n                            label=\"Name\"\n                            required\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system.thrust\"\n                            label=\"Thrust (mN)\"\n                            required\n                    > </v-text-field>\n                    <v-text-field\n                            v-model=\"system['specific_impulse']\"\n                            label=\"Specific Impulse (s)\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['manufacturer']\"\n                            label=\"Manufacturer\"\n                            required\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['propellant']\"\n                            label=\"Propellant\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system.weight\"\n                            label=\"Weight (kg)\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['input_power']\"\n                            label=\"Input Power (W)\"\n                    ></v-text-field>\n\n                    <!--                    Add other tables w/ multiple query                     -->\n\n<!--                    <v-text-field-->\n<!--                            v-model=\"system['ready_date']\"-->\n<!--                            label=\"Ready Date\"-->\n<!--                    ></v-text-field>-->\n<!--                    <v-text-field-->\n<!--                            v-model=\"system.TRL\"-->\n<!--                            label=\"TRL\"-->\n<!--                    ></v-text-field>-->\n                    <v-text-field\n                            v-model=\"system['mission_name']\"\n                            label=\"Mission Name\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['mission_date']\"\n                            label=\"Mission Date\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['delta_v']\"\n                            label=\"Delta V\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['dimension_description']\"\n                            label=\"Dimention Description\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['dimension_value']\"\n                            label=\"Dimention Value\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['interface_name']\"\n                            label=\"Interface Name\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"system['interface_description']\"\n                            label=\"Interface Description\"\n                    ></v-text-field>\n\n                    <v-btn class=\"mr-4\" @click=\"updateRecord\">Update</v-btn>\n                </form>\n\n            </v-container>\n\n\n        </v-card>\n        <v-spacer>.</v-spacer>\n        <v-divider></v-divider>\n    </div>\n</template>\n\n<script lang=\"js\">\n    import Vue from 'vue'\n    import Axios from 'axios'\n    import ToolbarGuest from '../components/Toolbar.vue';\n    var x;\n    export default Vue.extend({\n        components: {\n            ToolbarGuest\n        },\n\n        data() {\n            return {\n                renderForm: 'false',\n                thrusterNames:[],\n                selectedItem: 0,\n                dialog: false,\n                // nameInputRules: [\n                //     v => v && !!v || 'Required',\n                //     // Does not work on characters past first need to fix\n                //     v => v && /[a-zA-Z0-9]/.test(v) || 'No special characters allowed.',\n                //     v => v && v.length < 20 || 'Maximum length is 20 characters.'\n                // ],\n                // textInputRules: [\n                //     // no special characters\n                //     v => /[-_a-zA-Z]/.test(v) || 'No special characters allowed.',\n                //     v => v.length < 20 || 'Maximum length is 20 characters.'\n                // ],\n                // numberInputRules: [\n                //     v => /^[1-9]\\d*(\\.\\d+)?$/.test(v) || 'Value must be a number.',\n                // ],\n                // trlInputRules: [\n                //     v => v <= 9 || 'Value must be between 1 and 9.',\n                //     v => v && v != 0 || 'Value must be non-zero.'\n                // ],\n                system: {\n\n                },\n\n            };\n        },\n        methods: {\n            updateRecord() {\n                let system = {\n                    Thrust: {\n                        ID: this.system.ID,\n                        Name: this.system.Name,\n                        Thrust: this.system.Thrust,\n                        SpecificImpulse: this.system.SpecificImpulse,\n                        Manufacturer: this.system.Manufacturer,\n                        Propellant: this.system.Propellant,\n                        Weight: this.system.Weight,\n                        InputPower: this.system.InputPower\n                    },\n                    Dimensions: {\n                        Description: this.system.Description,\n                        DimensionValue: this.system.DimensionValue\n\n                    },\n                    // Availability: {\n                    //     ReadyDate: this.system.ReadyDate,\n                    //     TRL: this.system.TRL\n                    // },\n                    Missions: {\n                        MissionName: this.system.MissionName,\n                        MissionDate: this.system.MissionDate,\n                        DeltaV: this.system.DeltaV\n                    },\n                    Interfaces: {\n                        InterfaceName: this.system.InterfaceName,\n                        InterfaceDescription: this.system.InterfaceDescription\n                    }\n\n                }\n                JSON.stringify(system)\n                alert(\"Thruster: \" + this.system.name + \" has been updated.\")\n                console.log(\"Updated system: \")\n                console.log( this.system)\n                Axiosw\n                    // .put('https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/edit', system)\n                    .post('https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/modify', system)\n                    .catch(function(error) {\n                        console.log(error);\n                    })\n                this.$router.push({name: 'retrieve system'})\n            },\n\n            delete() {\n                //do stuff\n            },\n            loadData(event){\n                console.log(event);\n                x = event;\n                Axios.get(`https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/getById?id=${x}`)\n                    .then(response => {\n                        this.system = response.data.body[0],\n                            console.log(\"Getting Data\");\n                            console.log(this.system);\n                    })\n                    .catch(errors => console.log(errors));\n                this.renderForm = 'true';\n\n            },\n\n\n        },\n        mounted() {\n            Axios\n                .get('https://oi9r1r09k6.execute-api.us-east-1.amazonaws.com/deploy-stage/retrieve')\n                .then(response => {this.thrusterNames = response.data.body})\n                .catch(errors => console.log(errors));\n        }\n    })\n</script>"]}]}